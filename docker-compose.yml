version: "3.3"

services:
    ### PHP-FPM Container #######################################

    php:
        build:
            context: ./
            dockerfile: Dockerfile
        container_name: php
        depends_on:
            - mysql
            - redis
        restart: unless-stopped
        tty: true
        working_dir: /var/www
#        command: bash -c 'php artisan generate:key'
        volumes:
            - ./:/var/www
            - ./php/additional.ini:/usr/local/etc/php/conf.d/additional.ini
            - ./php/www.conf:/usr/local/etc/php-fpm.d/zz-docker.conf
        networks:
            - app-network

    ### Nginx Server Container ##################################

    nginx:
        image: nginx:stable-alpine
        container_name: nginx
        depends_on:
            - php
        restart: unless-stopped
        tty: true
        ports:
            - "80:80"
            - "443:443"
            - "8000:8000"
            - "8080:8080"
        environment:
            MYSQL_ROOT_PASSWORD: 12345678
            TZ: Asia/Shanghai
        volumes:
            - ./:/var/www
            - ./nginx/conf.d/:/etc/nginx/conf.d/
            - ./nginx/log:/var/log/nginx
        networks:
            - app-network

    frontend:
        container_name: frontend
        build:
            context: ./frontend
            dockerfile: Dockerfile
        networks:
            - app-network
        volumes:
            - './frontend:/usr/src/app'
            - '/app/node_modules'
        ports:
            - 3000:3000
        stdin_open: true
        environment:
            - CHOKIDAR_USEPOLLING=true
        command: npm start

    mysql:
        image: mysql/mysql-server:latest-aarch64
        container_name: mysql
        tty: true
        expose:
            - "3306"
        ports:
            - "3306:3306"
        environment:
            MYSQL_ROOT_PASSWORD: 12345678
            MYSQL_DATABASE: laravel
            MYSQL_USER: root
            MYSQL_PASSWORD: 12345678
            MYSQL_ROOT_HOST: '%'
            TZ: Asia/Shanghai
        volumes:
            - mysqldata:/var/lib/mysql
            - ./mysql/my.cnf:/etc/mysql/my.cnf
        restart: always
        networks:
            - app-network

    ### Redis Container ########################################
    redis:
        image: redis:alpine
        container_name: redis
        ports:
            - "6380:6379"
        environment:
            MYSQL_ROOT_PASSWORD: 12345678
            TZ: Asia/Shanghai
        volumes:
            - redisdata:/data
            - ./redis/conf:/usr/local/etc/redis
            - ./redis/log:/log
        # 指定配置文件启动redis
        command: [ "redis-server", "/usr/local/etc/redis/redis.conf" ]
        restart: always
        networks:
            - app-network


#Docker Networks
networks:
    app-network:
        driver: bridge
#Volumes
volumes:
    mysqldata:
        driver: local
    redisdata:
        driver: local
